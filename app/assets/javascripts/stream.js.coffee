$(document).ready ->
  currentPrice = {}
  socket = io.connect('https://streamer.cryptocompare.com/')
  #Format: {SubscriptionId}~{ExchangeName}~{FromSymbol}~{ToSymbol}
  #Use SubscriptionId 0 for TRADE, 2 for CURRENT and 5 for CURRENTAGG
  #For aggregate quote updates use CCCAGG as market

  subscription =
  # [
  #   "5~CCCAGG~BTC~#{CCC.currency}"
  #   "5~CCCAGG~ETH~#{CCC.currency}"
  #   "5~CCCAGG~LTC~#{CCC.currency}"
  #   "5~CCCAGG~BCN~#{CCC.currency}"
  # ]
    CCC.coins.map (coin) -> "5~CCCAGG~#{coin}~#{CCC.currency}"

  # Add the same in index.html
  socket.emit 'SubAdd', subs: subscription
  socket.on 'm', (message) ->
    messageType = message.substring(0, message.indexOf('~'))
    res = {}
    if messageType == CCC.STATIC.TYPE.CURRENTAGG
      res = CCC.CURRENT.unpack(message)
      dataUnpack res
    return

  dataUnpack = (data) ->
    from = data['FROMSYMBOL']
    to = data['TOSYMBOL']
    fsym = CCC.STATIC.CURRENCY.getSymbol(from)
    tsym = CCC.STATIC.CURRENCY.getSymbol(to)
    pair = from + to
    console.log data
    if !currentPrice.hasOwnProperty(pair)
      currentPrice[pair] = {}
    for key of data
      currentPrice[pair][key] = data[key]
    if currentPrice[pair]['LASTTRADEID']
      currentPrice[pair]['LASTTRADEID'] = parseInt(currentPrice[pair]['LASTTRADEID']).toFixed(0)
    currentPrice[pair]['CHANGE24HOUR'] = CCC.convertValueToDisplay(tsym, currentPrice[pair]['PRICE'] - (currentPrice[pair]['OPEN24HOUR']))
    currentPrice[pair]['CHANGE24HOURPCT'] = ((currentPrice[pair]['PRICE'] - (currentPrice[pair]['OPEN24HOUR'])) / currentPrice[pair]['OPEN24HOUR'] * 100).toFixed(2) + '%'
    displayData currentPrice[pair], from, tsym, fsym
    return

  displayData = (current, from, tsym, fsym) ->
    console.log current
    priceDirection = current.FLAGS
    for key of current
      if key == 'CHANGE24HOURPCT'
        $('#' + key + '_' + from).text ' (' + current[key] + ')'
      else if key == 'LASTVOLUMETO' or key == 'VOLUME24HOURTO'
        $('#' + key + '_' + from).text CCC.convertValueToDisplay(tsym, current[key])
      else if key == 'LASTVOLUME' or key == 'VOLUME24HOUR' or key == 'OPEN24HOUR' or key == 'OPENHOUR' or key == 'HIGH24HOUR' or key == 'HIGHHOUR' or key == 'LOWHOUR' or key == 'LOW24HOUR'
        $('#' + key + '_' + from).text CCC.convertValueToDisplay(fsym, current[key])
      else
        $('#' + key + '_' + from).text current[key]
        if key == 'PRICE'
          $('.TICKER_' + key + '_' + from).text current[key]
    $('#PRICE_' + from).removeClass()
    $('.TICKER_PRICE_' + from).removeClass()
    if priceDirection & 1
      $('#PRICE_' + from).addClass 'up'
      $('.TICKER_PRICE_' + from).addClass 'up'
    else if priceDirection & 2
      $('#PRICE_' + from).addClass 'down'
      $('.TICKER_PRICE_' + from).addClass 'down'
    if current['PRICE'] > current['OPEN24HOUR']
      $('#CHANGE24HOURPCT_' + from).removeClass()
      $('#CHANGE24HOURPCT_' + from).addClass 'up'
    else if current['PRICE'] < current['OPEN24HOUR']
      $('#CHANGE24HOURPCT_' + from).removeClass()
      $('#CHANGE24HOURPCT_' + from).addClass 'down'
    return

  return

# ---
# generated by js2coffee 2.2.0
